---
- hosts: all
 sudo: yes
 gather_facts: no
 tasks:
       - name: apt get update
         apt: update_cache=yes

       - name: install python3-pip
         apt: name=python3-pip

       - name: install git
         apt: name=git

       - name: install dependencies for postgres and cryptography
         apt: pkg={{item}}
         with_items:
           - libpq-dev
           - python-dev
           - python-psycopg2
           - build-essential
           - libssl-dev
           - libffi-dev

       - name: install postgres
         apt: pkg={{item}}
         with_items:
           - postgresql
           - postgresql-contrib

       - name: install nginx
         apt: name=nginx

       - name: install node
         apt: name=nodejs

       - name: install npm
         apt: name=npm

       - name: symlink to treat node as nodejs
         file: src=/usr/bin/nodejs dest=/usr/bin/node state=link

       - name: install bower globally
         npm: name=bower global=yes


- hosts: all
 sudo: yes
 sudo_user: postgres
 gather_facts: no

 vars:
   dbname: testdb
   dbuser: testuser
   dbpassword: password

 tasks:
     - name: create database
       postgresql_db: name={{dbname}}

     - name: grant all privilidges to user
       postgresql_user: db={{dbname}} name={{dbuser}} password={{dbpassword}} priv=ALL

     - name: ensure user does not have unnecessary privilege
       postgresql_user: name={/ssh-rsa{dbuser}} role_attr_flags=NOSUPERUSER,NOCREATEDB


- hosts: all
  sudo: yes
  gather_facts: no
  tasks:
   - name: copy the Github SSH public key file
     copy: src="/etc/ssh/id_rsa.pub"
           dest="/home/ubuntu/.ssh/id_rsa.pub"
           mode=0644
           owner=ubuntu
           group=ubuntu

   - name: copy the Github SSH private key file
     copy: src="/etc/ssh/id_rsa"
           dest="/home/ubuntu/.ssh/id_rsa_github"
           mode=0600
           owner=ubuntu
           group=ubuntu

    - name: Setup the Git repo
      sudo: no
      git: repo=git@bitbucket.org:pyramidtechnology/0280020703.git
           version=master
           dest="/home/ubuntu/test-project.git"
           accept_hostkey=yes
           bare=yes
           depth=1
           key_file="/home/ubuntu/.ssh/id_rsa_github"

    - name: Creates work directory
      file: path=/home/ubuntu/test-project state=directory

    - name: checkout in working directory
      shell: git --work-tree=/home/ubuntu/test-project --git-dir=/home/ubuntu/test-project.git checkout -f

    - name: create post-receive file in githook
      file: path=/home/ubuntu/test-project.git/hooks/post-receive state=touch group=ubuntu mode="u=rwx,g=rx,o=r"

    # Add a line to a file if it does not exist, without passing regexp
    - name: add executable env
      lineinfile: dest=/home/ubuntu/test-project.git/hooks/post-receive
                  line="#!/bin/sh" state=present insertbefore=BOF

    - name: add checkout line
      lineinfile: dest=/home/ubuntu/test-project.git/hooks/post-receive
                  line="git --work-tree=/home/ubuntu/test-project --git-dir=/home/ubuntu/test-project.git checkout -f" state=present insertbefore=EOF

- hosts: all
  sudo: yes
  gather_facts: no
  tasks:
        - name: get-pip.py
          command: sudo python3 get-pip.py chdir=/home/ubuntu/test-project/config/

        - name: Install virtualenv
          pip: name=virtualenv

        - name: create virtualenv
          command: virtualenv /home/ubuntu/myenv creates=/home/ubuntu/myenv

        - name: install gunicorn
          pip: name=gunicorn

        - name: Install python packages from requirment.txt
          pip: requirements=/home/ubuntu/test-project/requirements.txt  virtualenv=/home/ubuntu/myenv

        - name: copy gunicorn config file to /etc/init/
          command: cp /home/ubuntu/test-project/config/gunicorn.conf /etc/init/gunicorn.conf creates=/etc/init/gunicorn.conf

        - name: copy nginx config file to /etc/nginx/sites-available/
          command: cp /home/ubuntu/test-project/config/test-project-nginx /etc/nginx/sites-available/test-project-nginx creates=/etc/nginx/sites-available/test-project-nginx

        - name: enable the file by linking it to the sites-enabled directory
          file: src=/etc/nginx/sites-available/test-project-nginx dest=/etc/nginx/sites-enabled/test-project-nginx state=link

        - name: Run django migrations
          shell: /home/ubuntu/myenv/bin/python /home/ubuntu/test-project/backend/manage.py migrate

- hosts: all
  sudo: yes
  gather_facts: no
  tasks:
    - name: Install packages based on bower.json.
      bower: path=/home/ubuntu/test-project/frontend/build

- hosts: all
  sudo: yes
  gather_facts: no
  tasks:
        - name: restart gunicorn
          service: name=gunicorn state=restarted

        - name: restart service
          service: name=nginx state=restarted
